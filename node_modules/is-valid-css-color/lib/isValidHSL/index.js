"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isValidHSL = void 0;
var parseHSL_1 = require("./parseHSL");
/**
 * Returns true if a CSS HSL or HSLA color string is valid otherwise if it is invalid then it returns false
 * @param hslString The CSS HSL or HSLA string to validate
 */
var isValidHSL = function (hslString) {
    if (typeof hslString !== 'string')
        throw new Error("'hslString' must be a string");
    var csvLength = hslString.replace(/((hsla)|(hsl))|\(|\)|\s/g, '').split(',')
        .length;
    var isAlpha = hslString.startsWith('hsla(');
    var isCSVLengthValid = csvLength === 3 || csvLength === 4;
    if (!hslString.startsWith(isAlpha ? 'hsla(' : 'hsl(') ||
        !hslString.endsWith(')') ||
        !isCSVLengthValid)
        return false;
    var _a = parseHSL_1.parseHSL(hslString), hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, alpha = _a.alpha;
    var hueNum = parseFloat(hue);
    if (hueNum > 360 || hueNum < 0)
        return false;
    var saturationNum = parseFloat(saturation);
    if (saturationNum > 100 || saturationNum < 0)
        return false;
    var lightnessNum = parseFloat(lightness);
    if (lightnessNum > 100 || lightnessNum < 0)
        return false;
    if (isNaN(parseFloat(hue.replace(/(deg|rad|grad|turn)$/, ''))))
        return false;
    if (!saturation.endsWith('%') && saturationNum !== 0)
        return false;
    if (isNaN(parseFloat(saturation.replace(/%$/, ''))))
        return false;
    if (!lightness.endsWith('%') && lightnessNum !== 0)
        return false;
    if (isNaN(parseFloat(lightness.replace(/%$/, ''))))
        return false;
    if (isAlpha && alpha) {
        var alphaStr = alpha;
        var alphaNum = parseFloat(alpha);
        if (alphaStr.endsWith('%')) {
            if (alphaNum > 100 || alphaNum < 0)
                return false;
        }
        else {
            if (alphaNum > 1 || alphaNum < 0)
                return false;
        }
    }
    return true;
};
exports.isValidHSL = isValidHSL;
